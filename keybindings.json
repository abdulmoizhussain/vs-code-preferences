// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+shift+alt+a",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "($1) => { ${2:${TM_SELECTED_TEXT}} }$0"
    }
  },
  {
    "key": "ctrl+shift+alt+j",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "JSON.stringify(${1:${TM_SELECTED_TEXT}});$0"
    }
  },
  {
    "key": "ctrl+shift+alt+k",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "Object.keys(${1:${TM_SELECTED_TEXT}});$0"
    }
  },
  {
    "key": "ctrl+shift+alt+i",
    "command": "editor.action.insertSnippet",
    "args": {
      "snippet": "Alert.alert(\"$1\", $0);"
    }
  },
  {
    "key": "ctrl+shift+alt+l",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "console.log(${1:${TM_SELECTED_TEXT}})$0"
    }
  },
  {
    "key": "ctrl+shift+alt+;",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "console.group();\r${0:${TM_SELECTED_TEXT}}\rconsole.groupEnd();"
    }
  },
  {
    "key": "ctrl+shift+alt+'",
    "command": "editor.action.insertSnippet",
    "args": {
      "snippet": "`${${1:${TM_SELECTED_TEXT}}}`$0"
    }
  },
  {
    "key": "shift+delete",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x",
    "command": "editor.action.clipboardCutAction",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  // settings start: ctrl+tab and ctrl+shift+tab
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor",
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor",
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  // settings end: ctrl+tab and ctrl+shift+tab
  // for linux
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
]
